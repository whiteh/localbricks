# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.auto_scale import AutoScale
from openapi_server.models.aws_attributes import AwsAttributes
from openapi_server.models.cluster_log_conf import ClusterLogConf
from openapi_server.models.init_script_info import InitScriptInfo


class NewCluster(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    NewCluster - a model defined in OpenAPI

        num_workers: The num_workers of this NewCluster [Optional].
        autoscale: The autoscale of this NewCluster [Optional].
        spark_version: The spark_version of this NewCluster.
        spark_conf: The spark_conf of this NewCluster [Optional].
        aws_attributes: The aws_attributes of this NewCluster [Optional].
        node_type_id: The node_type_id of this NewCluster.
        driver_node_type_id: The driver_node_type_id of this NewCluster [Optional].
        ssh_public_keys: The ssh_public_keys of this NewCluster [Optional].
        custom_tags: The custom_tags of this NewCluster [Optional].
        cluster_log_conf: The cluster_log_conf of this NewCluster [Optional].
        init_scripts: The init_scripts of this NewCluster [Optional].
        spark_env_vars: The spark_env_vars of this NewCluster [Optional].
        enable_elastic_disk: The enable_elastic_disk of this NewCluster [Optional].
        driver_instance_pool_id: The driver_instance_pool_id of this NewCluster [Optional].
        instance_pool_id: The instance_pool_id of this NewCluster [Optional].
        policy_id: The policy_id of this NewCluster [Optional].
    """

    num_workers: Optional[int] = Field(alias="num_workers", default=None)
    autoscale: Optional[AutoScale] = Field(alias="autoscale", default=None)
    spark_version: str = Field(alias="spark_version")
    spark_conf: Optional[Dict[str, Any]] = Field(alias="spark_conf", default=None)
    aws_attributes: Optional[AwsAttributes] = Field(
        alias="aws_attributes", default=None)
    node_type_id: str = Field(alias="node_type_id")
    driver_node_type_id: Optional[str] = Field(
        alias="driver_node_type_id", default=None)
    ssh_public_keys: Optional[List[str]] = Field(alias="ssh_public_keys", default=None)
    custom_tags: Optional[Dict[str, str]] = Field(alias="custom_tags", default=None)
    cluster_log_conf: Optional[ClusterLogConf] = Field(
        alias="cluster_log_conf", default=None)
    init_scripts: Optional[List[InitScriptInfo]] = Field(
        alias="init_scripts", default=None)
    spark_env_vars: Optional[Dict[str, Any]] = Field(
        alias="spark_env_vars", default=None)
    enable_elastic_disk: Optional[bool] = Field(
        alias="enable_elastic_disk", default=None)
    driver_instance_pool_id: Optional[str] = Field(
        alias="driver_instance_pool_id", default=None)
    instance_pool_id: Optional[str] = Field(alias="instance_pool_id", default=None)
    policy_id: Optional[str] = Field(alias="policy_id", default=None)


NewCluster.update_forward_refs()
