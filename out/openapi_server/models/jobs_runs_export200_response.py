# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.view_item import ViewItem
from openapi_server import util

from openapi_server.models.view_item import ViewItem  # noqa: E501

class JobsRunsExport200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, views=None):  # noqa: E501
        """JobsRunsExport200Response - a model defined in OpenAPI

        :param views: The views of this JobsRunsExport200Response.  # noqa: E501
        :type views: List[ViewItem]
        """
        self.openapi_types = {
            'views': List[ViewItem]
        }

        self.attribute_map = {
            'views': 'views'
        }

        self._views = views

    @classmethod
    def from_dict(cls, dikt) -> 'JobsRunsExport200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The JobsRunsExport_200_response of this JobsRunsExport200Response.  # noqa: E501
        :rtype: JobsRunsExport200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def views(self):
        """Gets the views of this JobsRunsExport200Response.

        The exported content in HTML format (one for every view item).  # noqa: E501

        :return: The views of this JobsRunsExport200Response.
        :rtype: List[ViewItem]
        """
        return self._views

    @views.setter
    def views(self, views):
        """Sets the views of this JobsRunsExport200Response.

        The exported content in HTML format (one for every view item).  # noqa: E501

        :param views: The views of this JobsRunsExport200Response.
        :type views: List[ViewItem]
        """

        self._views = views
