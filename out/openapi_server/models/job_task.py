# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.notebook_task import NotebookTask
from openapi_server.models.pipeline_task import PipelineTask
from openapi_server.models.python_wheel_task import PythonWheelTask
from openapi_server.models.spark_jar_task import SparkJarTask
from openapi_server.models.spark_python_task import SparkPythonTask
from openapi_server.models.spark_submit_task import SparkSubmitTask
from openapi_server import util

from openapi_server.models.notebook_task import NotebookTask  # noqa: E501
from openapi_server.models.pipeline_task import PipelineTask  # noqa: E501
from openapi_server.models.python_wheel_task import PythonWheelTask  # noqa: E501
from openapi_server.models.spark_jar_task import SparkJarTask  # noqa: E501
from openapi_server.models.spark_python_task import SparkPythonTask  # noqa: E501
from openapi_server.models.spark_submit_task import SparkSubmitTask  # noqa: E501

class JobTask(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notebook_task=None, spark_jar_task=None, spark_python_task=None, spark_submit_task=None, pipeline_task=None, python_wheel_task=None):  # noqa: E501
        """JobTask - a model defined in OpenAPI

        :param notebook_task: The notebook_task of this JobTask.  # noqa: E501
        :type notebook_task: NotebookTask
        :param spark_jar_task: The spark_jar_task of this JobTask.  # noqa: E501
        :type spark_jar_task: SparkJarTask
        :param spark_python_task: The spark_python_task of this JobTask.  # noqa: E501
        :type spark_python_task: SparkPythonTask
        :param spark_submit_task: The spark_submit_task of this JobTask.  # noqa: E501
        :type spark_submit_task: SparkSubmitTask
        :param pipeline_task: The pipeline_task of this JobTask.  # noqa: E501
        :type pipeline_task: PipelineTask
        :param python_wheel_task: The python_wheel_task of this JobTask.  # noqa: E501
        :type python_wheel_task: PythonWheelTask
        """
        self.openapi_types = {
            'notebook_task': NotebookTask,
            'spark_jar_task': SparkJarTask,
            'spark_python_task': SparkPythonTask,
            'spark_submit_task': SparkSubmitTask,
            'pipeline_task': PipelineTask,
            'python_wheel_task': PythonWheelTask
        }

        self.attribute_map = {
            'notebook_task': 'notebook_task',
            'spark_jar_task': 'spark_jar_task',
            'spark_python_task': 'spark_python_task',
            'spark_submit_task': 'spark_submit_task',
            'pipeline_task': 'pipeline_task',
            'python_wheel_task': 'python_wheel_task'
        }

        self._notebook_task = notebook_task
        self._spark_jar_task = spark_jar_task
        self._spark_python_task = spark_python_task
        self._spark_submit_task = spark_submit_task
        self._pipeline_task = pipeline_task
        self._python_wheel_task = python_wheel_task

    @classmethod
    def from_dict(cls, dikt) -> 'JobTask':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The JobTask of this JobTask.  # noqa: E501
        :rtype: JobTask
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notebook_task(self):
        """Gets the notebook_task of this JobTask.


        :return: The notebook_task of this JobTask.
        :rtype: NotebookTask
        """
        return self._notebook_task

    @notebook_task.setter
    def notebook_task(self, notebook_task):
        """Sets the notebook_task of this JobTask.


        :param notebook_task: The notebook_task of this JobTask.
        :type notebook_task: NotebookTask
        """

        self._notebook_task = notebook_task

    @property
    def spark_jar_task(self):
        """Gets the spark_jar_task of this JobTask.


        :return: The spark_jar_task of this JobTask.
        :rtype: SparkJarTask
        """
        return self._spark_jar_task

    @spark_jar_task.setter
    def spark_jar_task(self, spark_jar_task):
        """Sets the spark_jar_task of this JobTask.


        :param spark_jar_task: The spark_jar_task of this JobTask.
        :type spark_jar_task: SparkJarTask
        """

        self._spark_jar_task = spark_jar_task

    @property
    def spark_python_task(self):
        """Gets the spark_python_task of this JobTask.


        :return: The spark_python_task of this JobTask.
        :rtype: SparkPythonTask
        """
        return self._spark_python_task

    @spark_python_task.setter
    def spark_python_task(self, spark_python_task):
        """Sets the spark_python_task of this JobTask.


        :param spark_python_task: The spark_python_task of this JobTask.
        :type spark_python_task: SparkPythonTask
        """

        self._spark_python_task = spark_python_task

    @property
    def spark_submit_task(self):
        """Gets the spark_submit_task of this JobTask.


        :return: The spark_submit_task of this JobTask.
        :rtype: SparkSubmitTask
        """
        return self._spark_submit_task

    @spark_submit_task.setter
    def spark_submit_task(self, spark_submit_task):
        """Sets the spark_submit_task of this JobTask.


        :param spark_submit_task: The spark_submit_task of this JobTask.
        :type spark_submit_task: SparkSubmitTask
        """

        self._spark_submit_task = spark_submit_task

    @property
    def pipeline_task(self):
        """Gets the pipeline_task of this JobTask.


        :return: The pipeline_task of this JobTask.
        :rtype: PipelineTask
        """
        return self._pipeline_task

    @pipeline_task.setter
    def pipeline_task(self, pipeline_task):
        """Sets the pipeline_task of this JobTask.


        :param pipeline_task: The pipeline_task of this JobTask.
        :type pipeline_task: PipelineTask
        """

        self._pipeline_task = pipeline_task

    @property
    def python_wheel_task(self):
        """Gets the python_wheel_task of this JobTask.


        :return: The python_wheel_task of this JobTask.
        :rtype: PythonWheelTask
        """
        return self._python_wheel_task

    @python_wheel_task.setter
    def python_wheel_task(self, python_wheel_task):
        """Sets the python_wheel_task of this JobTask.


        :param python_wheel_task: The python_wheel_task of this JobTask.
        :type python_wheel_task: PythonWheelTask
        """

        self._python_wheel_task = python_wheel_task
