# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.permission_level import PermissionLevel
from openapi_server import util

from openapi_server.models.permission_level import PermissionLevel  # noqa: E501

class AccessControlRequestForUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_name=None, permission_level=None):  # noqa: E501
        """AccessControlRequestForUser - a model defined in OpenAPI

        :param user_name: The user_name of this AccessControlRequestForUser.  # noqa: E501
        :type user_name: str
        :param permission_level: The permission_level of this AccessControlRequestForUser.  # noqa: E501
        :type permission_level: PermissionLevel
        """
        self.openapi_types = {
            'user_name': str,
            'permission_level': PermissionLevel
        }

        self.attribute_map = {
            'user_name': 'user_name',
            'permission_level': 'permission_level'
        }

        self._user_name = user_name
        self._permission_level = permission_level

    @classmethod
    def from_dict(cls, dikt) -> 'AccessControlRequestForUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AccessControlRequestForUser of this AccessControlRequestForUser.  # noqa: E501
        :rtype: AccessControlRequestForUser
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_name(self):
        """Gets the user_name of this AccessControlRequestForUser.

        Email address for the user.  # noqa: E501

        :return: The user_name of this AccessControlRequestForUser.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this AccessControlRequestForUser.

        Email address for the user.  # noqa: E501

        :param user_name: The user_name of this AccessControlRequestForUser.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def permission_level(self):
        """Gets the permission_level of this AccessControlRequestForUser.


        :return: The permission_level of this AccessControlRequestForUser.
        :rtype: PermissionLevel
        """
        return self._permission_level

    @permission_level.setter
    def permission_level(self, permission_level):
        """Sets the permission_level of this AccessControlRequestForUser.


        :param permission_level: The permission_level of this AccessControlRequestForUser.
        :type permission_level: PermissionLevel
        """

        self._permission_level = permission_level
