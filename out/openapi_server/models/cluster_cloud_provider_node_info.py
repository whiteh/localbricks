# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.cluster_cloud_provider_node_status import ClusterCloudProviderNodeStatus
from openapi_server import util

from openapi_server.models.cluster_cloud_provider_node_status import ClusterCloudProviderNodeStatus  # noqa: E501

class ClusterCloudProviderNodeInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status=None, available_core_quota=None, total_core_quota=None):  # noqa: E501
        """ClusterCloudProviderNodeInfo - a model defined in OpenAPI

        :param status: The status of this ClusterCloudProviderNodeInfo.  # noqa: E501
        :type status: ClusterCloudProviderNodeStatus
        :param available_core_quota: The available_core_quota of this ClusterCloudProviderNodeInfo.  # noqa: E501
        :type available_core_quota: int
        :param total_core_quota: The total_core_quota of this ClusterCloudProviderNodeInfo.  # noqa: E501
        :type total_core_quota: int
        """
        self.openapi_types = {
            'status': ClusterCloudProviderNodeStatus,
            'available_core_quota': int,
            'total_core_quota': int
        }

        self.attribute_map = {
            'status': 'status',
            'available_core_quota': 'available_core_quota',
            'total_core_quota': 'total_core_quota'
        }

        self._status = status
        self._available_core_quota = available_core_quota
        self._total_core_quota = total_core_quota

    @classmethod
    def from_dict(cls, dikt) -> 'ClusterCloudProviderNodeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClusterCloudProviderNodeInfo of this ClusterCloudProviderNodeInfo.  # noqa: E501
        :rtype: ClusterCloudProviderNodeInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ClusterCloudProviderNodeInfo.


        :return: The status of this ClusterCloudProviderNodeInfo.
        :rtype: ClusterCloudProviderNodeStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ClusterCloudProviderNodeInfo.


        :param status: The status of this ClusterCloudProviderNodeInfo.
        :type status: ClusterCloudProviderNodeStatus
        """

        self._status = status

    @property
    def available_core_quota(self):
        """Gets the available_core_quota of this ClusterCloudProviderNodeInfo.

        Available CPU core quota.  # noqa: E501

        :return: The available_core_quota of this ClusterCloudProviderNodeInfo.
        :rtype: int
        """
        return self._available_core_quota

    @available_core_quota.setter
    def available_core_quota(self, available_core_quota):
        """Sets the available_core_quota of this ClusterCloudProviderNodeInfo.

        Available CPU core quota.  # noqa: E501

        :param available_core_quota: The available_core_quota of this ClusterCloudProviderNodeInfo.
        :type available_core_quota: int
        """

        self._available_core_quota = available_core_quota

    @property
    def total_core_quota(self):
        """Gets the total_core_quota of this ClusterCloudProviderNodeInfo.

        Total CPU core quota.  # noqa: E501

        :return: The total_core_quota of this ClusterCloudProviderNodeInfo.
        :rtype: int
        """
        return self._total_core_quota

    @total_core_quota.setter
    def total_core_quota(self, total_core_quota):
        """Sets the total_core_quota of this ClusterCloudProviderNodeInfo.

        Total CPU core quota.  # noqa: E501

        :param total_core_quota: The total_core_quota of this ClusterCloudProviderNodeInfo.
        :type total_core_quota: int
        """

        self._total_core_quota = total_core_quota
