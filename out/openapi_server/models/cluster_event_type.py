# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ClusterEventType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CREATING = "CREATING"
    DID_NOT_EXPAND_DISK = "DID_NOT_EXPAND_DISK"
    EXPANDED_DISK = "EXPANDED_DISK"
    FAILED_TO_EXPAND_DISK = "FAILED_TO_EXPAND_DISK"
    INIT_SCRIPTS_STARTING = "INIT_SCRIPTS_STARTING"
    INIT_SCRIPTS_FINISHED = "INIT_SCRIPTS_FINISHED"
    STARTING = "STARTING"
    RESTARTING = "RESTARTING"
    TERMINATING = "TERMINATING"
    EDITED = "EDITED"
    RUNNING = "RUNNING"
    RESIZING = "RESIZING"
    UPSIZE_COMPLETED = "UPSIZE_COMPLETED"
    NODES_LOST = "NODES_LOST"
    DRIVER_HEALTHY = "DRIVER_HEALTHY"
    DRIVER_UNAVAILABLE = "DRIVER_UNAVAILABLE"
    SPARK_EXCEPTION = "SPARK_EXCEPTION"
    DRIVER_NOT_RESPONDING = "DRIVER_NOT_RESPONDING"
    DBFS_DOWN = "DBFS_DOWN"
    METASTORE_DOWN = "METASTORE_DOWN"
    NODE_BLACKLISTED = "NODE_BLACKLISTED"
    PINNED = "PINNED"
    UNPINNED = "UNPINNED"
    def __init__(self):  # noqa: E501
        """ClusterEventType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'ClusterEventType':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClusterEventType of this ClusterEventType.  # noqa: E501
        :rtype: ClusterEventType
        """
        return util.deserialize_model(dikt, cls)
