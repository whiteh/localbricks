# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.library_full_status import LibraryFullStatus
from openapi_server import util

from openapi_server.models.library_full_status import LibraryFullStatus  # noqa: E501

class ClusterLibraryStatuses(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cluster_id=None, library_statuses=None):  # noqa: E501
        """ClusterLibraryStatuses - a model defined in OpenAPI

        :param cluster_id: The cluster_id of this ClusterLibraryStatuses.  # noqa: E501
        :type cluster_id: str
        :param library_statuses: The library_statuses of this ClusterLibraryStatuses.  # noqa: E501
        :type library_statuses: List[LibraryFullStatus]
        """
        self.openapi_types = {
            'cluster_id': str,
            'library_statuses': List[LibraryFullStatus]
        }

        self.attribute_map = {
            'cluster_id': 'cluster_id',
            'library_statuses': 'library_statuses'
        }

        self._cluster_id = cluster_id
        self._library_statuses = library_statuses

    @classmethod
    def from_dict(cls, dikt) -> 'ClusterLibraryStatuses':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ClusterLibraryStatuses of this ClusterLibraryStatuses.  # noqa: E501
        :rtype: ClusterLibraryStatuses
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cluster_id(self):
        """Gets the cluster_id of this ClusterLibraryStatuses.

        Unique identifier for the cluster.  # noqa: E501

        :return: The cluster_id of this ClusterLibraryStatuses.
        :rtype: str
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id):
        """Sets the cluster_id of this ClusterLibraryStatuses.

        Unique identifier for the cluster.  # noqa: E501

        :param cluster_id: The cluster_id of this ClusterLibraryStatuses.
        :type cluster_id: str
        """

        self._cluster_id = cluster_id

    @property
    def library_statuses(self):
        """Gets the library_statuses of this ClusterLibraryStatuses.

        Status of all libraries on the cluster.  # noqa: E501

        :return: The library_statuses of this ClusterLibraryStatuses.
        :rtype: List[LibraryFullStatus]
        """
        return self._library_statuses

    @library_statuses.setter
    def library_statuses(self, library_statuses):
        """Sets the library_statuses of this ClusterLibraryStatuses.

        Status of all libraries on the cluster.  # noqa: E501

        :param library_statuses: The library_statuses of this ClusterLibraryStatuses.
        :type library_statuses: List[LibraryFullStatus]
        """

        self._library_statuses = library_statuses
