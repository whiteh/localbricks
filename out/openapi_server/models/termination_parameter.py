# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class TerminationParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, username=None, aws_api_error_code=None, aws_instance_state_reason=None, aws_spot_request_status=None, aws_spot_request_fault_code=None, aws_impaired_status_details=None, aws_instance_status_event=None, aws_error_message=None, databricks_error_message=None, inactivity_duration_min=None, instance_id=None, instance_pool_id=None, instance_pool_error_code=None):  # noqa: E501
        """TerminationParameter - a model defined in OpenAPI

        :param username: The username of this TerminationParameter.  # noqa: E501
        :type username: str
        :param aws_api_error_code: The aws_api_error_code of this TerminationParameter.  # noqa: E501
        :type aws_api_error_code: str
        :param aws_instance_state_reason: The aws_instance_state_reason of this TerminationParameter.  # noqa: E501
        :type aws_instance_state_reason: str
        :param aws_spot_request_status: The aws_spot_request_status of this TerminationParameter.  # noqa: E501
        :type aws_spot_request_status: str
        :param aws_spot_request_fault_code: The aws_spot_request_fault_code of this TerminationParameter.  # noqa: E501
        :type aws_spot_request_fault_code: str
        :param aws_impaired_status_details: The aws_impaired_status_details of this TerminationParameter.  # noqa: E501
        :type aws_impaired_status_details: str
        :param aws_instance_status_event: The aws_instance_status_event of this TerminationParameter.  # noqa: E501
        :type aws_instance_status_event: str
        :param aws_error_message: The aws_error_message of this TerminationParameter.  # noqa: E501
        :type aws_error_message: str
        :param databricks_error_message: The databricks_error_message of this TerminationParameter.  # noqa: E501
        :type databricks_error_message: str
        :param inactivity_duration_min: The inactivity_duration_min of this TerminationParameter.  # noqa: E501
        :type inactivity_duration_min: str
        :param instance_id: The instance_id of this TerminationParameter.  # noqa: E501
        :type instance_id: str
        :param instance_pool_id: The instance_pool_id of this TerminationParameter.  # noqa: E501
        :type instance_pool_id: str
        :param instance_pool_error_code: The instance_pool_error_code of this TerminationParameter.  # noqa: E501
        :type instance_pool_error_code: str
        """
        self.openapi_types = {
            'username': str,
            'aws_api_error_code': str,
            'aws_instance_state_reason': str,
            'aws_spot_request_status': str,
            'aws_spot_request_fault_code': str,
            'aws_impaired_status_details': str,
            'aws_instance_status_event': str,
            'aws_error_message': str,
            'databricks_error_message': str,
            'inactivity_duration_min': str,
            'instance_id': str,
            'instance_pool_id': str,
            'instance_pool_error_code': str
        }

        self.attribute_map = {
            'username': 'username',
            'aws_api_error_code': 'aws_api_error_code',
            'aws_instance_state_reason': 'aws_instance_state_reason',
            'aws_spot_request_status': 'aws_spot_request_status',
            'aws_spot_request_fault_code': 'aws_spot_request_fault_code',
            'aws_impaired_status_details': 'aws_impaired_status_details',
            'aws_instance_status_event': 'aws_instance_status_event',
            'aws_error_message': 'aws_error_message',
            'databricks_error_message': 'databricks_error_message',
            'inactivity_duration_min': 'inactivity_duration_min',
            'instance_id': 'instance_id',
            'instance_pool_id': 'instance_pool_id',
            'instance_pool_error_code': 'instance_pool_error_code'
        }

        self._username = username
        self._aws_api_error_code = aws_api_error_code
        self._aws_instance_state_reason = aws_instance_state_reason
        self._aws_spot_request_status = aws_spot_request_status
        self._aws_spot_request_fault_code = aws_spot_request_fault_code
        self._aws_impaired_status_details = aws_impaired_status_details
        self._aws_instance_status_event = aws_instance_status_event
        self._aws_error_message = aws_error_message
        self._databricks_error_message = databricks_error_message
        self._inactivity_duration_min = inactivity_duration_min
        self._instance_id = instance_id
        self._instance_pool_id = instance_pool_id
        self._instance_pool_error_code = instance_pool_error_code

    @classmethod
    def from_dict(cls, dikt) -> 'TerminationParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TerminationParameter of this TerminationParameter.  # noqa: E501
        :rtype: TerminationParameter
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self):
        """Gets the username of this TerminationParameter.

        The username of the user who terminated the cluster.  # noqa: E501

        :return: The username of this TerminationParameter.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this TerminationParameter.

        The username of the user who terminated the cluster.  # noqa: E501

        :param username: The username of this TerminationParameter.
        :type username: str
        """

        self._username = username

    @property
    def aws_api_error_code(self):
        """Gets the aws_api_error_code of this TerminationParameter.

        The AWS provided error code describing why cluster nodes could not be provisioned. For example, `InstanceLimitExceeded` indicates that the limit of EC2 instances for a specific instance type has been exceeded. For reference, see: <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/query-api-troubleshooting.html>.  # noqa: E501

        :return: The aws_api_error_code of this TerminationParameter.
        :rtype: str
        """
        return self._aws_api_error_code

    @aws_api_error_code.setter
    def aws_api_error_code(self, aws_api_error_code):
        """Sets the aws_api_error_code of this TerminationParameter.

        The AWS provided error code describing why cluster nodes could not be provisioned. For example, `InstanceLimitExceeded` indicates that the limit of EC2 instances for a specific instance type has been exceeded. For reference, see: <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/query-api-troubleshooting.html>.  # noqa: E501

        :param aws_api_error_code: The aws_api_error_code of this TerminationParameter.
        :type aws_api_error_code: str
        """

        self._aws_api_error_code = aws_api_error_code

    @property
    def aws_instance_state_reason(self):
        """Gets the aws_instance_state_reason of this TerminationParameter.

        The AWS provided state reason describing why the driver node was terminated. For example, `Client.VolumeLimitExceeded` indicates that the limit of EBS volumes or total EBS volume storage has been exceeded. For reference, see <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StateReason.html>.  # noqa: E501

        :return: The aws_instance_state_reason of this TerminationParameter.
        :rtype: str
        """
        return self._aws_instance_state_reason

    @aws_instance_state_reason.setter
    def aws_instance_state_reason(self, aws_instance_state_reason):
        """Sets the aws_instance_state_reason of this TerminationParameter.

        The AWS provided state reason describing why the driver node was terminated. For example, `Client.VolumeLimitExceeded` indicates that the limit of EBS volumes or total EBS volume storage has been exceeded. For reference, see <https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StateReason.html>.  # noqa: E501

        :param aws_instance_state_reason: The aws_instance_state_reason of this TerminationParameter.
        :type aws_instance_state_reason: str
        """

        self._aws_instance_state_reason = aws_instance_state_reason

    @property
    def aws_spot_request_status(self):
        """Gets the aws_spot_request_status of this TerminationParameter.

        Describes why a spot request could not be fulfilled. For example, `price-too-low` indicates that the max price was lower than the current spot price. For reference, see: <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand>.  # noqa: E501

        :return: The aws_spot_request_status of this TerminationParameter.
        :rtype: str
        """
        return self._aws_spot_request_status

    @aws_spot_request_status.setter
    def aws_spot_request_status(self, aws_spot_request_status):
        """Sets the aws_spot_request_status of this TerminationParameter.

        Describes why a spot request could not be fulfilled. For example, `price-too-low` indicates that the max price was lower than the current spot price. For reference, see: <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand>.  # noqa: E501

        :param aws_spot_request_status: The aws_spot_request_status of this TerminationParameter.
        :type aws_spot_request_status: str
        """

        self._aws_spot_request_status = aws_spot_request_status

    @property
    def aws_spot_request_fault_code(self):
        """Gets the aws_spot_request_fault_code of this TerminationParameter.

        Provides additional details when a spot request fails. For example `InsufficientFreeAddressesInSubnet` indicates the subnet does not have free IP addresses to accommodate the new instance. For reference, see <https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-spot-instance-requests.html>.  # noqa: E501

        :return: The aws_spot_request_fault_code of this TerminationParameter.
        :rtype: str
        """
        return self._aws_spot_request_fault_code

    @aws_spot_request_fault_code.setter
    def aws_spot_request_fault_code(self, aws_spot_request_fault_code):
        """Sets the aws_spot_request_fault_code of this TerminationParameter.

        Provides additional details when a spot request fails. For example `InsufficientFreeAddressesInSubnet` indicates the subnet does not have free IP addresses to accommodate the new instance. For reference, see <https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-spot-instance-requests.html>.  # noqa: E501

        :param aws_spot_request_fault_code: The aws_spot_request_fault_code of this TerminationParameter.
        :type aws_spot_request_fault_code: str
        """

        self._aws_spot_request_fault_code = aws_spot_request_fault_code

    @property
    def aws_impaired_status_details(self):
        """Gets the aws_impaired_status_details of this TerminationParameter.

        The AWS provided status check which failed and induced a node loss. This status may correspond to a failed instance or system check. For reference, see <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html>.  # noqa: E501

        :return: The aws_impaired_status_details of this TerminationParameter.
        :rtype: str
        """
        return self._aws_impaired_status_details

    @aws_impaired_status_details.setter
    def aws_impaired_status_details(self, aws_impaired_status_details):
        """Sets the aws_impaired_status_details of this TerminationParameter.

        The AWS provided status check which failed and induced a node loss. This status may correspond to a failed instance or system check. For reference, see <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html>.  # noqa: E501

        :param aws_impaired_status_details: The aws_impaired_status_details of this TerminationParameter.
        :type aws_impaired_status_details: str
        """

        self._aws_impaired_status_details = aws_impaired_status_details

    @property
    def aws_instance_status_event(self):
        """Gets the aws_instance_status_event of this TerminationParameter.

        The AWS provided scheduled event (for example reboot) which induced a node loss. For reference, see <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html>.  # noqa: E501

        :return: The aws_instance_status_event of this TerminationParameter.
        :rtype: str
        """
        return self._aws_instance_status_event

    @aws_instance_status_event.setter
    def aws_instance_status_event(self, aws_instance_status_event):
        """Sets the aws_instance_status_event of this TerminationParameter.

        The AWS provided scheduled event (for example reboot) which induced a node loss. For reference, see <https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html>.  # noqa: E501

        :param aws_instance_status_event: The aws_instance_status_event of this TerminationParameter.
        :type aws_instance_status_event: str
        """

        self._aws_instance_status_event = aws_instance_status_event

    @property
    def aws_error_message(self):
        """Gets the aws_error_message of this TerminationParameter.

        Human-readable context of various failures from AWS. This field is unstructured, and its exact format is subject to change.  # noqa: E501

        :return: The aws_error_message of this TerminationParameter.
        :rtype: str
        """
        return self._aws_error_message

    @aws_error_message.setter
    def aws_error_message(self, aws_error_message):
        """Sets the aws_error_message of this TerminationParameter.

        Human-readable context of various failures from AWS. This field is unstructured, and its exact format is subject to change.  # noqa: E501

        :param aws_error_message: The aws_error_message of this TerminationParameter.
        :type aws_error_message: str
        """

        self._aws_error_message = aws_error_message

    @property
    def databricks_error_message(self):
        """Gets the databricks_error_message of this TerminationParameter.

        Additional context that may explain the reason for cluster termination. This field is unstructured, and its exact format is subject to change.  # noqa: E501

        :return: The databricks_error_message of this TerminationParameter.
        :rtype: str
        """
        return self._databricks_error_message

    @databricks_error_message.setter
    def databricks_error_message(self, databricks_error_message):
        """Sets the databricks_error_message of this TerminationParameter.

        Additional context that may explain the reason for cluster termination. This field is unstructured, and its exact format is subject to change.  # noqa: E501

        :param databricks_error_message: The databricks_error_message of this TerminationParameter.
        :type databricks_error_message: str
        """

        self._databricks_error_message = databricks_error_message

    @property
    def inactivity_duration_min(self):
        """Gets the inactivity_duration_min of this TerminationParameter.

        An idle cluster was shut down after being inactive for this duration.  # noqa: E501

        :return: The inactivity_duration_min of this TerminationParameter.
        :rtype: str
        """
        return self._inactivity_duration_min

    @inactivity_duration_min.setter
    def inactivity_duration_min(self, inactivity_duration_min):
        """Sets the inactivity_duration_min of this TerminationParameter.

        An idle cluster was shut down after being inactive for this duration.  # noqa: E501

        :param inactivity_duration_min: The inactivity_duration_min of this TerminationParameter.
        :type inactivity_duration_min: str
        """

        self._inactivity_duration_min = inactivity_duration_min

    @property
    def instance_id(self):
        """Gets the instance_id of this TerminationParameter.

        The ID of the instance that was hosting the Spark driver.  # noqa: E501

        :return: The instance_id of this TerminationParameter.
        :rtype: str
        """
        return self._instance_id

    @instance_id.setter
    def instance_id(self, instance_id):
        """Sets the instance_id of this TerminationParameter.

        The ID of the instance that was hosting the Spark driver.  # noqa: E501

        :param instance_id: The instance_id of this TerminationParameter.
        :type instance_id: str
        """

        self._instance_id = instance_id

    @property
    def instance_pool_id(self):
        """Gets the instance_pool_id of this TerminationParameter.

        The ID of the instance pool the cluster is using.  # noqa: E501

        :return: The instance_pool_id of this TerminationParameter.
        :rtype: str
        """
        return self._instance_pool_id

    @instance_pool_id.setter
    def instance_pool_id(self, instance_pool_id):
        """Sets the instance_pool_id of this TerminationParameter.

        The ID of the instance pool the cluster is using.  # noqa: E501

        :param instance_pool_id: The instance_pool_id of this TerminationParameter.
        :type instance_pool_id: str
        """

        self._instance_pool_id = instance_pool_id

    @property
    def instance_pool_error_code(self):
        """Gets the instance_pool_error_code of this TerminationParameter.

        The [error code](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterterminationreasonpoolclusterterminationcode) for cluster failures specific to a pool.  # noqa: E501

        :return: The instance_pool_error_code of this TerminationParameter.
        :rtype: str
        """
        return self._instance_pool_error_code

    @instance_pool_error_code.setter
    def instance_pool_error_code(self, instance_pool_error_code):
        """Sets the instance_pool_error_code of this TerminationParameter.

        The [error code](https://docs.databricks.com/dev-tools/api/latest/clusters.html#clusterterminationreasonpoolclusterterminationcode) for cluster failures specific to a pool.  # noqa: E501

        :param instance_pool_error_code: The instance_pool_error_code of this TerminationParameter.
        :type instance_pool_error_code: str
        """

        self._instance_pool_error_code = instance_pool_error_code
