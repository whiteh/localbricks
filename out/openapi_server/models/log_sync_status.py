# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class LogSyncStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_attempted=None, last_exception=None):  # noqa: E501
        """LogSyncStatus - a model defined in OpenAPI

        :param last_attempted: The last_attempted of this LogSyncStatus.  # noqa: E501
        :type last_attempted: int
        :param last_exception: The last_exception of this LogSyncStatus.  # noqa: E501
        :type last_exception: str
        """
        self.openapi_types = {
            'last_attempted': int,
            'last_exception': str
        }

        self.attribute_map = {
            'last_attempted': 'last_attempted',
            'last_exception': 'last_exception'
        }

        self._last_attempted = last_attempted
        self._last_exception = last_exception

    @classmethod
    def from_dict(cls, dikt) -> 'LogSyncStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LogSyncStatus of this LogSyncStatus.  # noqa: E501
        :rtype: LogSyncStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_attempted(self):
        """Gets the last_attempted of this LogSyncStatus.

        The timestamp of last attempt. If the last attempt fails, last_exception contains the exception in the last attempt.  # noqa: E501

        :return: The last_attempted of this LogSyncStatus.
        :rtype: int
        """
        return self._last_attempted

    @last_attempted.setter
    def last_attempted(self, last_attempted):
        """Sets the last_attempted of this LogSyncStatus.

        The timestamp of last attempt. If the last attempt fails, last_exception contains the exception in the last attempt.  # noqa: E501

        :param last_attempted: The last_attempted of this LogSyncStatus.
        :type last_attempted: int
        """

        self._last_attempted = last_attempted

    @property
    def last_exception(self):
        """Gets the last_exception of this LogSyncStatus.

        The exception thrown in the last attempt, it would be null (omitted in the response) if there is no exception in last attempted.  # noqa: E501

        :return: The last_exception of this LogSyncStatus.
        :rtype: str
        """
        return self._last_exception

    @last_exception.setter
    def last_exception(self, last_exception):
        """Sets the last_exception of this LogSyncStatus.

        The exception thrown in the last attempt, it would be null (omitted in the response) if there is no exception in last attempted.  # noqa: E501

        :param last_exception: The last_exception of this LogSyncStatus.
        :type last_exception: str
        """

        self._last_exception = last_exception
