# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.termination_code import TerminationCode
from openapi_server.models.termination_type import TerminationType
from openapi_server import util

from openapi_server.models.termination_code import TerminationCode  # noqa: E501
from openapi_server.models.termination_type import TerminationType  # noqa: E501

class TerminationReason(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code=None, type=None, parameters=None):  # noqa: E501
        """TerminationReason - a model defined in OpenAPI

        :param code: The code of this TerminationReason.  # noqa: E501
        :type code: TerminationCode
        :param type: The type of this TerminationReason.  # noqa: E501
        :type type: TerminationType
        :param parameters: The parameters of this TerminationReason.  # noqa: E501
        :type parameters: Dict[str, object]
        """
        self.openapi_types = {
            'code': TerminationCode,
            'type': TerminationType,
            'parameters': Dict[str, object]
        }

        self.attribute_map = {
            'code': 'code',
            'type': 'type',
            'parameters': 'parameters'
        }

        self._code = code
        self._type = type
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt) -> 'TerminationReason':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TerminationReason of this TerminationReason.  # noqa: E501
        :rtype: TerminationReason
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this TerminationReason.


        :return: The code of this TerminationReason.
        :rtype: TerminationCode
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this TerminationReason.


        :param code: The code of this TerminationReason.
        :type code: TerminationCode
        """

        self._code = code

    @property
    def type(self):
        """Gets the type of this TerminationReason.


        :return: The type of this TerminationReason.
        :rtype: TerminationType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this TerminationReason.


        :param type: The type of this TerminationReason.
        :type type: TerminationType
        """

        self._type = type

    @property
    def parameters(self):
        """Gets the parameters of this TerminationReason.

        An object with additional information about why a cluster was terminated. The object keys are one of `TerminationParameter` and the value is the termination information.  # noqa: E501

        :return: The parameters of this TerminationReason.
        :rtype: Dict[str, object]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this TerminationReason.

        An object with additional information about why a cluster was terminated. The object keys are one of `TerminationParameter` and the value is the termination information.  # noqa: E501

        :param parameters: The parameters of this TerminationReason.
        :type parameters: Dict[str, object]
        """

        self._parameters = parameters
