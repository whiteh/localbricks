# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class SparkSubmitTask(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parameters=None):  # noqa: E501
        """SparkSubmitTask - a model defined in OpenAPI

        :param parameters: The parameters of this SparkSubmitTask.  # noqa: E501
        :type parameters: List[str]
        """
        self.openapi_types = {
            'parameters': List[str]
        }

        self.attribute_map = {
            'parameters': 'parameters'
        }

        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt) -> 'SparkSubmitTask':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SparkSubmitTask of this SparkSubmitTask.  # noqa: E501
        :rtype: SparkSubmitTask
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parameters(self):
        """Gets the parameters of this SparkSubmitTask.

        Command-line parameters passed to spark submit.  Use [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables) to set parameters containing information about job runs.  # noqa: E501

        :return: The parameters of this SparkSubmitTask.
        :rtype: List[str]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this SparkSubmitTask.

        Command-line parameters passed to spark submit.  Use [Task parameter variables](https://docs.databricks.com/jobs.html#parameter-variables) to set parameters containing information about job runs.  # noqa: E501

        :param parameters: The parameters of this SparkSubmitTask.
        :type parameters: List[str]
        """

        self._parameters = parameters
