# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class TerminationCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    USER_REQUEST = "USER_REQUEST"
    JOB_FINISHED = "JOB_FINISHED"
    INACTIVITY = "INACTIVITY"
    CLOUD_PROVIDER_SHUTDOWN = "CLOUD_PROVIDER_SHUTDOWN"
    COMMUNICATION_LOST = "COMMUNICATION_LOST"
    CLOUD_PROVIDER_LAUNCH_FAILURE = "CLOUD_PROVIDER_LAUNCH_FAILURE"
    SPARK_STARTUP_FAILURE = "SPARK_STARTUP_FAILURE"
    INVALID_ARGUMENT = "INVALID_ARGUMENT"
    UNEXPECTED_LAUNCH_FAILURE = "UNEXPECTED_LAUNCH_FAILURE"
    INTERNAL_ERROR = "INTERNAL_ERROR"
    SPARK_ERROR = "SPARK_ERROR"
    METASTORE_COMPONENT_UNHEALTHY = "METASTORE_COMPONENT_UNHEALTHY"
    DBFS_COMPONENT_UNHEALTHY = "DBFS_COMPONENT_UNHEALTHY"
    DRIVER_UNREACHABLE = "DRIVER_UNREACHABLE"
    DRIVER_UNRESPONSIVE = "DRIVER_UNRESPONSIVE"
    INSTANCE_UNREACHABLE = "INSTANCE_UNREACHABLE"
    CONTAINER_LAUNCH_FAILURE = "CONTAINER_LAUNCH_FAILURE"
    INSTANCE_POOL_CLUSTER_FAILURE = "INSTANCE_POOL_CLUSTER_FAILURE"
    REQUEST_REJECTED = "REQUEST_REJECTED"
    INIT_SCRIPT_FAILURE = "INIT_SCRIPT_FAILURE"
    TRIAL_EXPIRED = "TRIAL_EXPIRED"
    def __init__(self):  # noqa: E501
        """TerminationCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'TerminationCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TerminationCode of this TerminationCode.  # noqa: E501
        :rtype: TerminationCode
        """
        return util.deserialize_model(dikt, cls)
