# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.notebook_task import NotebookTask
from openapi_server.models.pipeline_task import PipelineTask
from openapi_server.models.python_wheel_task import PythonWheelTask
from openapi_server.models.spark_jar_task import SparkJarTask
from openapi_server.models.spark_python_task import SparkPythonTask
from openapi_server.models.spark_submit_task import SparkSubmitTask


class JobTask(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    JobTask - a model defined in OpenAPI

        notebook_task: The notebook_task of this JobTask [Optional].
        spark_jar_task: The spark_jar_task of this JobTask [Optional].
        spark_python_task: The spark_python_task of this JobTask [Optional].
        spark_submit_task: The spark_submit_task of this JobTask [Optional].
        pipeline_task: The pipeline_task of this JobTask [Optional].
        python_wheel_task: The python_wheel_task of this JobTask [Optional].
    """

    notebook_task: Optional[NotebookTask] = Field(alias="notebook_task", default=None)
    spark_jar_task: Optional[SparkJarTask] = Field(alias="spark_jar_task", default=None)
    spark_python_task: Optional[SparkPythonTask] = Field(alias="spark_python_task", default=None)
    spark_submit_task: Optional[SparkSubmitTask] = Field(alias="spark_submit_task", default=None)
    pipeline_task: Optional[PipelineTask] = Field(alias="pipeline_task", default=None)
    python_wheel_task: Optional[PythonWheelTask] = Field(alias="python_wheel_task", default=None)

JobTask.update_forward_refs()
