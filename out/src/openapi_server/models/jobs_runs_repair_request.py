# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.repair_run_input import RepairRunInput
from openapi_server.models.run_parameters import RunParameters


class JobsRunsRepairRequest(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    JobsRunsRepairRequest - a model defined in OpenAPI

        run_id: The run_id of this JobsRunsRepairRequest [Optional].
        rerun_tasks: The rerun_tasks of this JobsRunsRepairRequest [Optional].
        latest_repair_id: The latest_repair_id of this JobsRunsRepairRequest [Optional].
        jar_params: The jar_params of this JobsRunsRepairRequest [Optional].
        notebook_params: The notebook_params of this JobsRunsRepairRequest [Optional].
        python_params: The python_params of this JobsRunsRepairRequest [Optional].
        spark_submit_params: The spark_submit_params of this JobsRunsRepairRequest [Optional].
        python_named_params: The python_named_params of this JobsRunsRepairRequest [Optional].
    """

    run_id: Optional[int] = Field(alias="run_id", default=None)
    rerun_tasks: Optional[List[str]] = Field(alias="rerun_tasks", default=None)
    latest_repair_id: Optional[int] = Field(alias="latest_repair_id", default=None)
    jar_params: Optional[List[str]] = Field(alias="jar_params", default=None)
    notebook_params: Optional[Dict[str, Any]] = Field(alias="notebook_params", default=None)
    python_params: Optional[List[str]] = Field(alias="python_params", default=None)
    spark_submit_params: Optional[List[str]] = Field(alias="spark_submit_params", default=None)
    python_named_params: Optional[Dict[str, Any]] = Field(alias="python_named_params", default=None)

JobsRunsRepairRequest.update_forward_refs()
